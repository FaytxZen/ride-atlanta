apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'
apply plugin: 'jacoco'
apply plugin: 'kotlin-kapt'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.3"
    defaultConfig {
        applicationId "com.andrewvora.apps.rideatlanta"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 4
        versionName "1.2.1"
        testInstrumentationRunner "com.andrewvora.apps.rideatlanta.testing.RideAtlantaTestRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "String", "MARTA_API_KEY", "\"$System.env.RIDEATLANTA_MARTA_API_KEY\""
            buildConfigField "String", "FABRIC_API_KEY", "\"$System.env.RIDEATLANTA_FABRIC_API_KEY\""
            buildConfigField "String", "TWITTER_API_KEY", "\"$System.env.RIDEATLANTA_TWITTER_API_KEY\""
            buildConfigField "String", "TWITTER_SECRET", "\"$System.env.RIDEATLANTA_TWITTER_SECRET\""
        }
        release {
            minifyEnabled true
            shrinkResources true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "String", "MARTA_API_KEY", "\"$System.env.RIDEATLANTA_PROD_MARTA_API_KEY\""
            buildConfigField "String", "FABRIC_API_KEY", "\"$System.env.RIDEATLANTA_PROD_FABRIC_API_KEY\""
            buildConfigField "String", "TWITTER_API_KEY", "\"$System.env.RIDEATLANTA_PROD_TWITTER_API_KEY\""
            buildConfigField "String", "TWITTER_SECRET", "\"$System.env.RIDEATLANTA_PROD_TWITTER_SECRET\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    def app_compat_version = '26.1.0'
    def dagger_version = '2.15'
    def butter_knife_version = '8.5.1'
    def retrofit_version = '2.3.0'
    def leak_canary_version = '1.5.4'

    // System Dependencies
    implementation "com.android.support:appcompat-v7:$app_compat_version"
    implementation "com.android.support:design:$app_compat_version"
    implementation "com.android.support:cardview-v7:$app_compat_version"
    implementation "com.android.support:recyclerview-v7:$app_compat_version"
    implementation('com.twitter.sdk.android:twitter:2.2.0@aar') {
        transitive = true
    }

    implementation 'io.reactivex.rxjava2:rxjava:2.1.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation "com.jakewharton:butterknife:$butter_knife_version"
    kapt "com.jakewharton:butterknife-compiler:$butter_knife_version"

    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation 'com.google.code.gson:gson:2.8.2'

    // dev
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    debugImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version"

    // test
    def espresso_version = "2.2.2"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espresso_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$espresso_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestImplementation("com.android.support.test.espresso:espresso-web:$espresso_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestImplementation 'com.squareup.rx.idler:rx2-idler:0.9.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.8.47'
    testImplementation "com.nhaarman:mockito-kotlin:1.5.0"
}

// LeakCanary - ensure the no-op dependency is always used in JVM tests.
configurations.all { config ->
    if (config.name.contains('UnitTest')) {
        config.resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
            }
        }
    }
}